{"version":3,"sources":["../../../src/test/components/graph-view.js"],"names":["setUpDomEnvironment","JSDOM","jsdom","dom","window","global","document","navigator","userAgent","copyProps","src","target","props","Object","getOwnPropertyNames","filter","prop","map","getOwnPropertyDescriptor","defineProperties","adapter","Adapter","EmptyShape","SpecialShape","SpecialChildShape","EmptyEdgeShape","SpecialEdgeShape","config","NodeTypes","empty","typeText","shapeId","shape","special","NodeSubtypes","specialChild","EdgeTypes","emptyEdge","specialEdge","EMPTY_TYPE","SPECIAL_TYPE","SPECIAL_CHILD_SUBTYPE","EMPTY_EDGE_TYPE","SPECIAL_EDGE_TYPE","sample","getViewNode","id","nodes","node","mockProps","nodeKey","emptyType","edges","selected","nodeTypes","nodeSubtypes","edgeTypes","onSelectNode","onCreateNode","onUpdateNode","onDeleteNode","onSelectEdge","onCreateEdge","onSwapEdge","onDeleteEdge","tests","wrapper","t","equal","find","length","view","render","controls","end","module","exports"],"mappings":"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","file":"graph-view.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React from 'react';\r\n\r\nimport Adapter from 'enzyme-adapter-react-16';\r\nimport { configure, mount, render } from 'enzyme';\r\nimport jsdom from 'jsdom';\r\nimport test from 'tape';\r\nimport sinon from 'sinon';\r\n\r\nimport GraphView from '../../components/graph-view';\r\n\r\n\r\n//https://stackoverflow.com/questions/46896639/ensure-a-dom-environment-is-loaded-for-enzyme\r\nfunction setUpDomEnvironment() {\r\n  const { JSDOM } = jsdom;\r\n  const dom = new JSDOM('<!doctype html><html><body></body></html>');\r\n  const { window } = dom;\r\n\r\n  global.window = window;\r\n  global.document = window.document;\r\n  global.navigator = {\r\n    userAgent: 'node.js',\r\n  };\r\n  copyProps(window, global);\r\n}\r\n\r\nfunction copyProps(src, target) {\r\n  const props = Object.getOwnPropertyNames(src)\r\n    .filter(prop => typeof target[prop] === 'undefined')\r\n    .map(prop => Object.getOwnPropertyDescriptor(src, prop));\r\n  Object.defineProperties(target, props);\r\n}\r\n\r\nsetUpDomEnvironment();\r\n\r\nconfigure({ adapter: new Adapter() })\r\n\r\n\r\n\r\nconst EmptyShape = (\r\n  <symbol viewBox=\"0 0 100 100\" id=\"empty\" key=\"0\">\r\n    <circle cx=\"50\" cy=\"50\" r=\"45\"></circle>\r\n  </symbol>\r\n)\r\n\r\nconst SpecialShape = (\r\n  <symbol viewBox=\"0 0 100 100\" id=\"special\" key=\"1\">\r\n    <rect transform=\"translate(50) rotate(45)\" width=\"70\" height=\"70\"></rect>\r\n  </symbol>\r\n)\r\n\r\nconst SpecialChildShape = (\r\n  <symbol viewBox=\"0 0 100 100\" id=\"specialChild\" key=\"0\">\r\n    <rect x=\"2.5\" y=\"0\" width=\"95\" height=\"97.5\" fill=\"rgba(30, 144, 255, 0.12)\"></rect>\r\n  </symbol>\r\n)\r\n\r\nconst EmptyEdgeShape = (\r\n  <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\" key=\"0\">\r\n    <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\"> </circle>\r\n  </symbol>\r\n)\r\n\r\nconst SpecialEdgeShape = (\r\n  <symbol viewBox=\"0 0 50 50\" id=\"specialEdge\" key=\"1\">\r\n    <rect transform=\"rotate(45)\"  x=\"25\" y=\"-4.5\" width=\"15\" height=\"15\" fill=\"currentColor\"></rect>\r\n  </symbol>\r\n)\r\n\r\nconst config = {\r\n  NodeTypes: {\r\n    empty: {\r\n      typeText: \"None\",\r\n      shapeId: \"#empty\",\r\n      shape: EmptyShape\r\n    },\r\n    special: {\r\n      typeText: \"Special\",\r\n      shapeId: \"#special\",\r\n      shape: SpecialShape\r\n    }\r\n  },\r\n  NodeSubtypes: {\r\n    specialChild: {\r\n      shapeId: \"#specialChild\",\r\n      shape: SpecialChildShape\r\n    }\r\n  },\r\n  EdgeTypes: {\r\n    emptyEdge: {\r\n      shapeId: \"#emptyEdge\",\r\n      shape: EmptyEdgeShape\r\n    },\r\n    specialEdge: {\r\n      shapeId: \"#specialEdge\",\r\n      shape: SpecialEdgeShape\r\n    }\r\n  }\r\n}\r\n\r\nconst EMPTY_TYPE = \"empty\"; // Empty node type\r\nconst SPECIAL_TYPE = \"special\";\r\nconst SPECIAL_CHILD_SUBTYPE = \"specialChild\";\r\nconst EMPTY_EDGE_TYPE = \"emptyEdge\";\r\nconst SPECIAL_EDGE_TYPE = \"specialEdge\";\r\n\r\nconst sample = {\r\n  \"nodes\": [\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"Node A\",\r\n      \"x\": 258.3976135253906,\r\n      \"y\": 331.9783248901367,\r\n      \"type\": SPECIAL_TYPE\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"title\": \"Node B\",\r\n      \"x\": 593.9393920898438,\r\n      \"y\": 260.6060791015625,\r\n      \"type\": EMPTY_TYPE,\r\n      \"subtype\": SPECIAL_CHILD_SUBTYPE\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"title\": \"Node C\",\r\n      \"x\": 237.5757598876953,\r\n      \"y\": 61.81818389892578,\r\n      \"type\": EMPTY_TYPE\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"title\": \"Node C\",\r\n      \"x\": 600.5757598876953,\r\n      \"y\": 600.81818389892578,\r\n      \"type\": EMPTY_TYPE\r\n    }\r\n  ],\r\n  \"edges\": [\r\n    {\r\n      \"source\": 1,\r\n      \"target\": 2,\r\n      \"type\": SPECIAL_EDGE_TYPE\r\n    },\r\n    {\r\n      \"source\": 2,\r\n      \"target\": 4,\r\n      \"type\": EMPTY_EDGE_TYPE\r\n    }\r\n  ]\r\n}\r\n\r\nconst getViewNode = function(id){\r\n  return sample.nodes.filter(function(node){\r\n    return node.id === id\r\n  })[0]\r\n}\r\n\r\nconst mockProps = {\r\n  nodeKey: \"id\",\r\n  emptyType: EMPTY_TYPE,\r\n  nodes: sample.nodes,\r\n  edges: sample.edges,\r\n  selected: {},\r\n  nodeTypes: config.NodeTypes,\r\n  nodeSubtypes: config.NodeSubtypes,\r\n  edgeTypes: config.EdgeTypes,\r\n  getViewNode: getViewNode,\r\n  onSelectNode:()=>null,\r\n  onCreateNode: ()=>null,\r\n  onUpdateNode: ()=>null,\r\n  onDeleteNode: ()=>null,\r\n  onSelectEdge: ()=>null,\r\n  onCreateEdge: ()=>null,\r\n  onSwapEdge: ()=>null,\r\n  onDeleteEdge: ()=>null\r\n}\r\n\r\nconst tests = function(){\r\n\r\n  test('GraphView', t => {\r\n    const wrapper = mount(<GraphView {...mockProps}/>);\r\n    t.equal(wrapper.find('.viewWrapper').length, 1, 'Renders wrapper');\r\n\r\n    const view = wrapper.find('.view').render()\r\n    t.equal(view.find('.node').length, 4, 'Renders nodes');\r\n    t.equal(view.find('.edge').length, 2, 'Renders edges');\r\n\r\n    const controls = wrapper.find('.graphControls')\r\n    t.equal(controls.length, 1, 'Renders controls');\r\n\r\n    t.end();\r\n  });\r\n\r\n}\r\n\r\n\r\nmodule.exports = tests"]}