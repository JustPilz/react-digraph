{"version":3,"sources":["../../src/components/graph-controls.js"],"names":["FaExpand","require","FaInfoCircle","steps","makeStyles","primary","controls","position","bottom","left","zIndex","display","gridTemplateColumns","gridGap","alignItems","sliderWrapper","backgroundColor","color","border","padding","borderRadius","slider","top","marginLeft","marginRight","cursor","button","outline","width","height","GraphControls","props","state","styles","val","maxZoom","minZoom","zoomToFit","e","sliderVal","target","value","zoomLevelNext","sliderToZoom","delta","zoomLevel","modifyZoom","zoomToSlider","zoom","bind","Component","propTypes","PropTypes","string","number","isRequired","func","defaultProps"],"mappings":"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","file":"graph-controls.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n/*\r\n  Zoom slider and zoom to fit controls for GraphView\r\n*/\r\n\r\nimport React, {Component} from 'react';\r\nimport Radium from 'radium';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Only old-style imports for react-icons seem to work with gulp\r\nconst FaExpand = require('react-icons/lib/fa/expand');\r\nconst FaInfoCircle = require('react-icons/lib/fa/info-circle');\r\n\r\n\r\n\r\nconst steps = 100; // Slider steps\r\n\r\n\r\n\r\nfunction makeStyles(primary){\r\n  return {\r\n    controls: {\r\n      position: 'absolute',\r\n      bottom: '30px',\r\n      left: '15px',\r\n      zIndex: 100,\r\n      display: 'grid',\r\n      gridTemplateColumns: 'auto auto',\r\n      gridGap: '15px',\r\n      alignItems: 'center'\r\n    },\r\n    sliderWrapper: {\r\n      backgroundColor: 'white',\r\n      color: primary,\r\n      border: `solid 1px lightgray`,\r\n      padding: '6.5px',\r\n      borderRadius: '2px'\r\n    },\r\n    slider: {\r\n      position: 'relative',\r\n      top: '6px',\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      cursor: 'pointer'\r\n    },\r\n    button: {\r\n      backgroundColor: 'white',\r\n      color: primary,\r\n      border: `solid 1px lightgray`,\r\n      outline: 'none',\r\n      width: 31,\r\n      height: 31,\r\n      borderRadius: '2px',\r\n      cursor: 'pointer'\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass GraphControls extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      styles: makeStyles(props.primary)\r\n    }\r\n  }\r\n\r\n  // Convert slider val (0-steps) to original zoom value range\r\n  sliderToZoom(val){\r\n    return ((val) * (this.props.maxZoom - this.props.minZoom)/steps ) + this.props.minZoom\r\n  }\r\n\r\n  // Convert zoom val (minZoom-maxZoom) to slider range\r\n  zoomToSlider(val){\r\n    return (val - this.props.minZoom) * steps/(this.props.maxZoom - this.props.minZoom)\r\n  }\r\n\r\n  // Center graph-view on contents of svg > view\r\n  zoomToFit(){\r\n    this.props.zoomToFit();\r\n  }\r\n\r\n  // Modify current zoom of graph-view\r\n  zoom(e){\r\n    let sliderVal = e.target.value;\r\n    let zoomLevelNext = this.sliderToZoom(sliderVal);\r\n    let delta = zoomLevelNext-this.props.zoomLevel;\r\n\r\n    if( zoomLevelNext <= this.props.maxZoom && zoomLevelNext >= this.props.minZoom){\r\n      this.props.modifyZoom(delta)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const styles = this.state.styles;\r\n\r\n    return (\r\n      <div style={styles.controls} className=\"graphControls\">\r\n        <div style={styles.sliderWrapper}>\r\n          -\r\n          <input\r\n            type=\"range\"\r\n            style={styles.slider}\r\n            min={this.zoomToSlider(this.props.minZoom)}\r\n            max={this.zoomToSlider(this.props.maxZoom)}\r\n            value={this.zoomToSlider(this.props.zoomLevel)}\r\n            onChange={this.zoom.bind(this)}\r\n            step=\"1\"/>\r\n          +\r\n        </div>\r\n        <button type=\"button\" style={styles.button} onMouseDown={this.props.zoomToFit}>\r\n          <FaExpand/>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGraphControls.propTypes = {\r\n  primary: PropTypes.string,\r\n  minZoom: PropTypes.number,\r\n  maxZoom: PropTypes.number,\r\n  zoomLevel: PropTypes.number.isRequired,\r\n  zoomToFit: PropTypes.func.isRequired,\r\n  modifyZoom: PropTypes.func.isRequired\r\n}\r\n\r\nGraphControls.defaultProps = {\r\n  primary: 'dodgerblue',\r\n  minZoom: 0.15,\r\n  maxZoom: 1.5\r\n}\r\n\r\nexport default Radium(GraphControls)\r\n"]}